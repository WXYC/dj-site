name: DJ Site Build and Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        
    env:
      CI: false
      REACT_APP_AWS_USER_POOL_ID: ${{ secrets.AWS_USER_POOL_ID }}
      REACT_APP_AWS_REGION: ${{ secrets.AWS_REGION }}
      REACT_APP_AWS_CLIENT_ID: ${{ secrets.AWS_CLIENT_ID }}
      REACT_APP_AWS_IDENTITY_POOL_ID: ${{ secrets.AWS_IDENTITY_POOL_ID }}
      REACT_APP_LAST_FM_KEY: ${{ secrets.LAST_FM_KEY }}
      REACT_APP_DISCOGS_CONSUMER_KEY: ${{ secrets.DISCOGS_CONSUMER_KEY }}
      REACT_APP_DISCOGS_CONSUMER_SECRET: ${{ secrets.DISCOGS_CONSUMER_SECRET }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build  # Ensure the 'build' job completes before deployment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare CNAME file
        run: |
          # Preserve CNAME file if it exists
          if [ -f CNAME ]; then
            CNAME_CONTENT=$(cat CNAME)
          fi

          # Delete all files except the CNAME file
          find . -not -name 'CNAME' -type f -delete
          find . -not -name 'CNAME' -type d -exec rm -rf {} +

          # Restore the CNAME file
          echo "$CNAME_CONTENT" > CNAME
        working-directory: ./

      - name: Deploy to GitHub Pages
        run: |
          # Copy the contents of the build directory to the root of the repository
          cp -r ./build/* .

          # Configure Git user information for the deployment commit
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Commit and push changes to the gh-pages branch
          git add -A
          git commit -m "Deploy to GitHub Pages"
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
